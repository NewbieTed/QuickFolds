package com.quickfolds.backend.geometry.model.database;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.OffsetDateTime;

/**
 * Represents a specific type of step in the origami process where a fold is performed.
 * <p>
 * This entity maps to the "fold_step" table in the database and links each fold
 * operation to an anchored face, along with user and timestamp metadata.
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "fold_step")
public class FoldStep {

    /**
     * Primary key for the FoldStep table.
     * <p>
     * - Auto-generated by the database using identity strategy.
     * - References the associated step's ID in the "step" table.
     * - Cannot be null and cannot be updated after creation.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "step_id", nullable = false, updatable = false)
    private Long stepId;

    /**
     * Foreign key referencing the face used as a reference (anchored face) in the fold.
     * <p>
     * - Cannot be null.
     * - Links to the "face" table.
     */
    @Column(name = "anchored_face_id", nullable = false)
    private Long anchoredFaceId;

    /**
     * Identifier of the user who created this fold step record.
     * <p>
     * - May be null if not explicitly set.
     */
    @Column(name = "created_by")
    private String createdBy;

    /**
     * Identifier of the user who last updated this fold step record.
     * <p>
     * - May be null if not explicitly set.
     */
    @Column(name = "updated_by")
    private String updatedBy;

    /**
     * Timestamp when this fold step record was created.
     * <p>
     * - Automatically set at the time of creation.
     * - Cannot be updated after creation.
     */
    @Column(name = "created_at", nullable = false, updatable = false)
    private OffsetDateTime createdAt;

    /**
     * Timestamp when this fold step record was last updated.
     * <p>
     * - Updated automatically when the record is modified.
     * - Can be null if no updates have occurred.
     */
    @Column(name = "updated_at")
    private OffsetDateTime updatedAt;
}